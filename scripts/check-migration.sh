#!/bin/bash

echo "üöÄ MailTrendz Backend - Verifica√ß√£o p√≥s-migra√ß√£o"
echo "================================================"

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Fun√ß√£o para verificar arquivo
check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2 - Arquivo n√£o encontrado: $1${NC}"
    fi
}

# Fun√ß√£o para verificar diret√≥rio
check_dir() {
    if [ -d "$1" ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2 - Diret√≥rio n√£o encontrado: $1${NC}"
    fi
}

# Fun√ß√£o para verificar se arquivo N√ÉO existe
check_removed() {
    if [ ! -f "$1" ]; then
        echo -e "${GREEN}‚úÖ $2 removido${NC}"
    else
        echo -e "${RED}‚ùå $2 ainda existe: $1${NC}"
    fi
}

echo ""
echo "1. Verificando estrutura de diret√≥rios..."
echo "-----------------------------------------"
check_dir "src/database" "Diret√≥rio database"
check_dir "src/database/migrations" "Diret√≥rio migrations"
check_dir "src/database/seeds" "Diret√≥rio seeds"
check_dir "src/services/supabase" "Diret√≥rio services/supabase"

echo ""
echo "2. Verificando arquivos de configura√ß√£o..."
echo "------------------------------------------"
check_file "src/config/supabase.config.ts" "Configura√ß√£o Supabase"
check_file ".env.example" "Arquivo .env.example"
check_removed "src/config/database.config.ts" "MongoDB config"

echo ""
echo "3. Verificando migrations SQL..."
echo "---------------------------------"
check_file "src/database/migrations/001_initial_setup.sql" "Initial setup"
check_file "src/database/migrations/002_rls_policies.sql" "RLS policies"
check_file "src/database/complete-setup.sql" "Complete setup"

echo ""
echo "4. Verificando services..."
echo "---------------------------"
check_file "src/services/auth.service.ts" "Auth service (refatorado)"
check_file "src/services/project.service.ts" "Project service (refatorado)"
check_file "src/services/chat.service.ts" "Chat service (refatorado)"
check_file "src/services/supabase/storage.service.ts" "Storage service"
check_file "src/services/supabase/realtime.service.ts" "Realtime service"

echo ""
echo "5. Verificando middleware..."
echo "-----------------------------"
check_file "src/middleware/auth.middleware.ts" "Auth middleware (refatorado)"
check_file "src/middleware/api-usage.middleware.ts" "API usage middleware"

echo ""
echo "6. Verificando controllers..."
echo "------------------------------"
check_file "src/controllers/auth.controller.ts" "Auth controller"
check_file "src/controllers/project.controller.ts" "Project controller"
check_file "src/controllers/chat.controller.ts" "Chat controller"
check_file "src/controllers/ai.controller.ts" "AI controller"
check_file "src/controllers/user.controller.ts" "User controller"

echo ""
echo "7. Verificando remo√ß√£o de models MongoDB..."
echo "--------------------------------------------"
check_removed "src/models/User.model.ts" "User model"
check_removed "src/models/Project.model.ts" "Project model"
check_removed "src/models/Chat.model.ts" "Chat model"

echo ""
echo "8. Verificando arquivos de documenta√ß√£o..."
echo "------------------------------------------"
check_file "MIGRATION_SUPABASE.md" "Documenta√ß√£o da migra√ß√£o"
check_file "MIGRATION_COMPLETE.md" "Status da migra√ß√£o"

echo ""
echo "9. Verificando package.json..."
echo "-------------------------------"
if grep -q "@supabase/supabase-js" package.json; then
    echo -e "${GREEN}‚úÖ @supabase/supabase-js instalado${NC}"
else
    echo -e "${RED}‚ùå @supabase/supabase-js n√£o encontrado${NC}"
fi

if ! grep -q "mongoose" package.json; then
    echo -e "${GREEN}‚úÖ mongoose removido${NC}"
else
    echo -e "${RED}‚ùå mongoose ainda presente${NC}"
fi

if ! grep -q "bcryptjs" package.json; then
    echo -e "${GREEN}‚úÖ bcryptjs removido${NC}"
else
    echo -e "${RED}‚ùå bcryptjs ainda presente${NC}"
fi

echo ""
echo "10. Verificando vari√°veis de ambiente..."
echo "-----------------------------------------"
if [ -f ".env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env encontrado - verifique se cont√©m:${NC}"
    echo "   - SUPABASE_URL"
    echo "   - SUPABASE_ANON_KEY"
    echo "   - SUPABASE_SERVICE_ROLE"
else
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado${NC}"
    echo "   Execute: cp .env.example .env"
fi

echo ""
echo "================================================"
echo "üìã Pr√≥ximos passos:"
echo ""
echo "1. Execute as migrations no Supabase Dashboard:"
echo "   https://supabase.com/dashboard/project/kuhlihvgocoxscouzmeg/sql"
echo ""
echo "2. Configure o arquivo .env com as credenciais"
echo ""
echo "3. Execute o servidor:"
echo "   npm run dev"
echo ""
echo "4. Teste os endpoints:"
echo "   curl http://localhost:8000/health"
echo ""
echo "================================================"